// PLEASE READ THE README to Install bb
// Fill the bb_backend1.toml with proper witnesses to continue ; ) 

// I AM NOT DONE!

// After running this test, you can check the output files in 
// runner_crate/src/target/
// You will have the runner_crate.json: the ACIR format of the circuit (generated by nargo when compiling)
// you will find bb_backend1.gz --> this is the witness file (in binary format) this has been generated 
// by nargo 
// and then you should find proof-bb_backend1 --> this is the proof file (in binary format) this has been generated
// by the bb backend. This is the new thing ; )

// We used bb prove -b ./target/runner_crate.json -w ./target/bb_backend1.gz -o ./target/proof-bb_backend1
// bb prove -b <our binary ACIR> -w <our binary witness> -o <output proof file>
// Don't hesitate to put yourself in the runner_crate and test it out ; ) 

fn main(a : u8, b: u8) {
    let z = a + b;
    assert (z == 2);
}